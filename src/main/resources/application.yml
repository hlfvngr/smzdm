spring:
  datasource:
    url: jdbc:mysql://localhost:3306/smzdm?serverTimezone=GMT&userUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver

  redis:
    host: localhost
    port: 6379
    password: wdkynbd
    timeout: 100000


#  redis.port=6379
#  redis.password=123456
#  redis.timeout=100000
#  redis.maxTotal=300
#  redis.maxIdle=100
#  redis.maxWaitMillis=1000
#  redis.testOnBorrow=true

    # redis 密码及其他配置

  # spring.redis.host = 140.143.23.94
  # spring.redis.password = 123456
  # spring.redis.port = 6379
  # 连接超时时间 单位 ms（毫秒）
  # spring.redis.timeout = 6000
  # spring.redis.cluster.nodes = 12.2.3.14:7001,12.2.3.14:7002,12.2.3.14:7003,12.2.3.14:7004
  # 连接池中的最大空闲连接，默认值也是8
  # spring.redis.pool.max-idle = 8
  # 连接池中的最小空闲连接，默认值也是0
  # spring.redis.pool.min-idle = 0
  # 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
  # spring.redis.pool.max-active = 8
  # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出
  # spring.redis.pool.max-wait = -1

server:
  servlet:
    context-path: /hacker
  port: 80
#  address: localhost

image-dir: D:/upload

mybatis:
  config-location: classpath:mybatis-config.xml

#logging:
#  config: classpath:log4j2_dev.xml

##log����
#  logging.level.root=WARN
#  #springframework.web��־��DEBUG�������
#  logging.level.org.springframework.web=DEBUG
#  #��־����ı���·��
#  logging.file=D:/upload/wangdaonews.log
#  #��־��ʽ
#  logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
#  logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
